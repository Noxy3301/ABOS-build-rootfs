
altbootcmd=log rec none warning "" 0 altbootcmd "Counted $bootlimit consecutive unfinished boots"; run rollback
apply_fit_overlays=for overlay in ${fdt_overlays}; do echo "Appending overlay ${overlay}"; fitconf="${fitconf}#${overlay}"; done; setenv fdt_overlays
apply_overlays=for overlay in ${fdt_overlays}; do if load mmc ${mmcdev}:${mmcpart} ${overlay_addr} /boot/${overlay}; then echo "Applying fdt overlay: ${overlay}"; fdt apply ${overlay_addr}; else echo "Warning: fdt overlay ${overlay} not found!"; fi; done; setenv fdt_overlays
baudrate=115200
boot_fit=no
bootcmd=mmc dev ${mmcdev}; sleep 0.5; if mmc rescan; then if run loadbootscript; then run bootscript; else run loadimage && run mmcboot; fi; run rollback; fi;
bootdelay=0
bootlimit=3
bootscript=echo Running bootscript from mmc ...; source; log rec none warning "" 0 bootscript "boot script did not boot"
console=ttymxc0,115200
fdt_addr=0x83500000
fdt_file=boot/armadillo.dtb
fdt_size=0x20000
fdtautodetect=yes
fitconf_base=#armadillo
image=boot/uImage
load_overlays_list=load mmc ${mmcdev}:${mmcpart} ${overlay_addr} ${overlays_list} && env import -t ${overlay_addr} ${filesize}
loadaddr=0x80800000
loadbootscript=load mmc ${mmcdev}:${mmcpart} ${loadaddr} ${script};
loadfdt=if load mmc ${mmcdev}:${mmcpart} ${fdt_addr} ${fdt_file}; then echo "Loading fdt ${fdt_file}" && fdt addr ${fdt_addr} && fdt resize ${fdt_size}; else log rec none warning "" 0 loadfdt "Could not load fdt file!"; false; fi
loadimage=load mmc ${mmcdev}:${mmcpart} ${loadaddr} ${image}
mmcargs=setenv bootargs console=${console} root=${mmcroot} ${optargs}
mmcautodetect=yes
mmcboot=echo Booting from mmc ...; run mmcargs; if test ${boot_fit} = yes; then run apply_fit_overlays; run load_overlays_list && run apply_fit_overlays; bootm ${loadaddr}"${fitconf_base}${fitconf}"; log rec none warning "" 0 mmcboot "Could not boot fit image"; elif run loadfdt; then run apply_overlays; run load_overlays_list && run apply_overlays; bootm ${loadaddr} - ${fdt_addr}; log rec none warning "" 0 mmcboot "Could not boot image"; fi
mmcdev=0
mmcpart=1
mmcroot=/dev/mmcblk0p1 rootwait rw
optargs=quiet
overlay_addr=0x83520000
overlays_list=boot/overlays.txt
rollback=setenv bootcount; if test "${upgrade_available}" -gt 0 && run setfallback; then log rec none warning "" 0 rollback "Rolling back to mmcblk${mmcdev}p${fallback}"; if test "${mmcdev}" = 0; then run rollback_mmc; else run rollback_other; fi; elif test "${upgrade_available}" -gt 0; then log rec none warning "" 0 rollback "Cannot compute rollback target from mmcpart ${mmcpart}"; else log rec none warning "" 0 rollback "Rollback target is not ready, refusing to rollback."; fi; saveenv; reset
rollback_mmc=saveenv && mmc partconf 0 0 ${fallback} 0 && reset
rollback_other=setenv mmcpart "${fallback}"; setenv mmcroot "mmcblk${mmcdev}p${fallback} rootwait ro"; saveenv; reset
script=boot/boot.scr
setfallback=setexpr fallback 3 - ${mmcpart}; test "${fallback}" = 1 || test "${fallback}" = 2
stderr=mxc_serial
stdin=mxc_serial
stdout=mxc_serial
timeoffset=32400
upgrade_available=1
